{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./src/views/main/product/category/category.vue","webpack:///./src/views/main/product/category/config/search.config.ts","webpack:///./src/views/main/product/category/config/content.config.ts","webpack:///./src/views/main/product/category/config/modal.config.ts","webpack:///./src/views/main/product/category/category.vue?7a22","webpack:///./src/views/main/product/category/category.vue?21e3","webpack:///./src/components/page-modal/src/page-modal.vue","webpack:///./src/components/page-modal/src/page-modal.vue?0948","webpack:///./src/components/page-modal/src/page-modal.vue?fc94","webpack:///./src/components/page-modal/index.ts","webpack:///./src/hooks/usePageSearch.ts","webpack:///./src/hooks/usePageModal.ts"],"names":["_arrayWithHoles","arr","Array","isArray","_iterableToArrayLimit","i","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","length","err","_nonIterableRest","TypeError","_slicedToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","class","searchFormConfig","handleResetClick","handleSearchClick","contentTableConfig","pageName","ref","handleNewData","handleEditData","modalConfig","defaultInfo","labelWidth","formItems","field","type","label","placeholder","otherOptions","startPlaceholder","endPlaceholder","title","propList","prop","minWidth","slotName","showIndexColumn","showSelectColum","colLayout","span","itemStyle","name","components","pageSearch","PageContent","PageModal","setup","usePageSearch","pageContentRef","usePageModal","pageModalRef","render","dialogVisible","width","center","destroy-on-close","footer","handleConfirmClick","formData","props","Object","required","default","otherInfo","String","LxForm","newValue","item","store","keys","dispatch","editData","id","newData","getPageData","searchInfo","newCallBack","editCallBack"],"mappings":"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","file":"js/chunk-16b9478f.b8422272.js","sourcesContent":["export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","<template>\n  <div class=\"category\">\n    <page-search\n      :searchFormConfig=\"searchFormConfig\"\n      @resetBtnClick=\"handleResetClick\"\n      @searchBtnClick=\"handleSearchClick\"\n    />\n    <page-content\n      :contentTableConfig=\"contentTableConfig\"\n      pageName=\"category\"\n      ref=\"pageContentRef\"\n      @newBtnClick=\"handleNewData\"\n      @editBtnClick=\"handleEditData\"\n    />\n    <page-modal\n      :modalConfig=\"modalConfig\"\n      ref=\"pageModalRef\"\n      :defaultInfo=\"defaultInfo\"\n      pageName=\"category\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nimport PageContent from '@/components/page-content'\nimport pageSearch from '@/components/page-search'\nimport PageModal from '@/components/page-modal'\n\nimport { searchFormConfig } from './config/search.config'\nimport { contentTableConfig } from './config/content.config'\nimport { modalConfig } from './config/modal.config'\n\nimport { usePageSearch } from '@/hooks/usePageSearch'\nimport { usePageModal } from '@/hooks/usePageModal'\n\nexport default defineComponent({\n  name: 'category',\n  components: {\n    pageSearch,\n    PageContent,\n    PageModal\n  },\n  setup() {\n    // 重置、搜索的hooks\n    const [pageContentRef, handleResetClick, handleSearchClick] =\n      usePageSearch()\n\n    const [pageModalRef, defaultInfo, handleNewData, handleEditData] =\n      usePageModal()\n\n    return {\n      searchFormConfig,\n      contentTableConfig,\n      modalConfig,\n      pageContentRef,\n      handleResetClick,\n      handleSearchClick,\n      handleNewData,\n      handleEditData,\n      pageModalRef,\n      defaultInfo\n    }\n  }\n})\n</script>\n\n<style scoped></style>\n","// 配置文件\nimport { IForm } from '@/base-ui/form'\n\nexport const searchFormConfig: IForm = {\n  labelWidth: '120px',\n  // itemStyle: {\n  //   padding: '10px 30px'\n  // },\n  // colLayout: {\n  //   // 有默认值\n  //   span: 8\n  // },\n  formItems: [\n    {\n      field: 'name',\n      type: 'input',\n      label: '分类名称',\n      placeholder: '请输入分类名称'\n    },\n    {\n      field: 'createAt',\n      type: 'datepicker',\n      label: '创建时间',\n      otherOptions: {\n        startPlaceholder: '开始时间',\n        endPlaceholder: '结束时间',\n        // 时间选择范围\n        type: 'daterange'\n      }\n    }\n  ]\n}\n","export const contentTableConfig = {\n  title: '分类列表',\n  propList: [\n    { prop: 'name', label: '商品分类', minWidth: '120' },\n    {\n      prop: 'createAt',\n      label: '创建时间',\n      minWidth: '150',\n      slotName: 'createAt'\n    },\n    {\n      prop: 'updateAt',\n      label: '更新时间',\n      minWidth: '150',\n      slotName: 'updateAt'\n    },\n    { label: '操作', minWidth: '100', slotName: 'handler' }\n  ],\n\n  // 是否显示序号\n  showIndexColumn: true,\n  // 是否显示选中框\n  showSelectColum: true\n}\n","// 配置文件\nimport { IForm } from '@/base-ui/form'\n\nexport const modalConfig: IForm = {\n  title: '新建商品分类',\n  formItems: [\n    {\n      field: 'categoryId',\n      type: 'input',\n      label: '商品分类',\n      placeholder: '请输入商品分类'\n    }\n  ],\n  colLayout: { span: 24 },\n  itemStyle: {}\n}\n","\nimport { defineComponent } from 'vue'\n\nimport PageContent from '@/components/page-content'\nimport pageSearch from '@/components/page-search'\nimport PageModal from '@/components/page-modal'\n\nimport { searchFormConfig } from './config/search.config'\nimport { contentTableConfig } from './config/content.config'\nimport { modalConfig } from './config/modal.config'\n\nimport { usePageSearch } from '@/hooks/usePageSearch'\nimport { usePageModal } from '@/hooks/usePageModal'\n\nexport default defineComponent({\n  name: 'category',\n  components: {\n    pageSearch,\n    PageContent,\n    PageModal\n  },\n  setup() {\n    // 重置、搜索的hooks\n    const [pageContentRef, handleResetClick, handleSearchClick] =\n      usePageSearch()\n\n    const [pageModalRef, defaultInfo, handleNewData, handleEditData] =\n      usePageModal()\n\n    return {\n      searchFormConfig,\n      contentTableConfig,\n      modalConfig,\n      pageContentRef,\n      handleResetClick,\n      handleSearchClick,\n      handleNewData,\n      handleEditData,\n      pageModalRef,\n      defaultInfo\n    }\n  }\n})\n","import { render } from \"./category.vue?vue&type=template&id=3b28cf38\"\nimport script from \"./category.vue?vue&type=script&lang=ts\"\nexport * from \"./category.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <div class=\"page-modal\">\n    <el-dialog\n      v-model=\"dialogVisible\"\n      :title=\"modalConfig.title\"\n      width=\"30%\"\n      center\n      destroy-on-close\n    >\n      <lx-form v-bind=\"modalConfig\" v-model=\"formData\"></lx-form>\n      <slot></slot>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"dialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"handleConfirmClick\"\n            >确 定</el-button\n          >\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, watch } from 'vue'\nimport { useStore } from 'vuex'\n\nimport LxForm from '@/base-ui/form'\n\nexport default defineComponent({\n  props: {\n    modalConfig: {\n      type: Object,\n      required: true\n    },\n    defaultInfo: {\n      type: Object,\n      default: () => ({})\n    },\n    otherInfo: {\n      type: Object,\n      default: () => ({})\n    },\n    pageName: {\n      type: String,\n      required: true\n    }\n  },\n  components: {\n    LxForm\n  },\n  setup(props) {\n    const dialogVisible = ref(false)\n    const formData = ref<any>({})\n\n    watch(\n      () => props.defaultInfo,\n      (newValue) => {\n        for (const item of props.modalConfig.formItems) {\n          formData.value[`${item.field}`] = newValue[`${item.field}`]\n        }\n      }\n    )\n\n    // 点击确定按钮的逻辑\n    const store = useStore()\n    const handleConfirmClick = () => {\n      dialogVisible.value = false\n      // 区分是新建按钮还是编辑按钮\n      if (Object.keys(props.defaultInfo).length) {\n        // 编辑按钮\n        store.dispatch('systemModule/editPageDataAction', {\n          pageName: props.pageName,\n          editData: { ...formData.value, ...props.otherInfo },\n          id: props.defaultInfo.id\n        })\n      } else {\n        // 新建按钮\n        store.dispatch('systemModule/createPageDataAction', {\n          pageName: props.pageName,\n          newData: { ...formData.value, ...props.otherInfo }\n        })\n      }\n    }\n\n    return {\n      dialogVisible,\n      formData,\n      handleConfirmClick\n    }\n  }\n})\n</script>\n\n<style scoped></style>\n","\nimport { defineComponent, ref, watch } from 'vue'\nimport { useStore } from 'vuex'\n\nimport LxForm from '@/base-ui/form'\n\nexport default defineComponent({\n  props: {\n    modalConfig: {\n      type: Object,\n      required: true\n    },\n    defaultInfo: {\n      type: Object,\n      default: () => ({})\n    },\n    otherInfo: {\n      type: Object,\n      default: () => ({})\n    },\n    pageName: {\n      type: String,\n      required: true\n    }\n  },\n  components: {\n    LxForm\n  },\n  setup(props) {\n    const dialogVisible = ref(false)\n    const formData = ref<any>({})\n\n    watch(\n      () => props.defaultInfo,\n      (newValue) => {\n        for (const item of props.modalConfig.formItems) {\n          formData.value[`${item.field}`] = newValue[`${item.field}`]\n        }\n      }\n    )\n\n    // 点击确定按钮的逻辑\n    const store = useStore()\n    const handleConfirmClick = () => {\n      dialogVisible.value = false\n      // 区分是新建按钮还是编辑按钮\n      if (Object.keys(props.defaultInfo).length) {\n        // 编辑按钮\n        store.dispatch('systemModule/editPageDataAction', {\n          pageName: props.pageName,\n          editData: { ...formData.value, ...props.otherInfo },\n          id: props.defaultInfo.id\n        })\n      } else {\n        // 新建按钮\n        store.dispatch('systemModule/createPageDataAction', {\n          pageName: props.pageName,\n          newData: { ...formData.value, ...props.otherInfo }\n        })\n      }\n    }\n\n    return {\n      dialogVisible,\n      formData,\n      handleConfirmClick\n    }\n  }\n})\n","import { render } from \"./page-modal.vue?vue&type=template&id=a0ef8b3c\"\nimport script from \"./page-modal.vue?vue&type=script&lang=ts\"\nexport * from \"./page-modal.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import PageModal from './src/page-modal.vue'\n\nexport default PageModal\n","// 重置、搜索的hooks\nimport { ref } from 'vue'\nimport PageContent from '@/components/page-content'\n\nexport function usePageSearch() {\n  const pageContentRef = ref<InstanceType<typeof PageContent>>()\n\n  const handleResetClick = () => {\n    pageContentRef.value?.getPageData()\n  }\n\n  const handleSearchClick = (searchInfo: any) => {\n    pageContentRef.value?.getPageData(searchInfo)\n  }\n\n  return [pageContentRef, handleResetClick, handleSearchClick]\n}\n","import { ref } from 'vue'\nimport PageModal from '@/components/page-modal'\n\ntype CallbackFn = (item?: any) => void\n\nexport function usePageModal(\n  newCallBack?: CallbackFn,\n  editCallBack?: CallbackFn\n) {\n  const pageModalRef = ref<InstanceType<typeof PageModal>>()\n  const defaultInfo = ref({})\n  const handleNewData = () => {\n    // 新建情况下为空对象\n    defaultInfo.value = {}\n    if (pageModalRef.value) {\n      pageModalRef.value.dialogVisible = true\n    }\n    // 当前面的有值时，才会调用后面的\n    newCallBack && newCallBack()\n  }\n  const handleEditData = (item: any) => {\n    // 编辑时，赋值回显\n    defaultInfo.value = { ...item }\n    if (pageModalRef.value) {\n      pageModalRef.value.dialogVisible = true\n    }\n    editCallBack && editCallBack(item)\n  }\n\n  return [pageModalRef, defaultInfo, handleNewData, handleEditData]\n}\n"],"sourceRoot":""}