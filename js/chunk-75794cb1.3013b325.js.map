{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./src/components/page-modal/src/page-modal.vue","webpack:///./src/components/page-modal/src/page-modal.vue?0948","webpack:///./src/components/page-modal/src/page-modal.vue?fc94","webpack:///./src/components/page-modal/index.ts","webpack:///./src/views/main/system/user/user.vue","webpack:///./src/views/main/system/user/config/search.config.ts","webpack:///./src/views/main/system/user/config/content.config.ts","webpack:///./src/views/main/system/user/config/modal.config.ts","webpack:///./src/views/main/system/user/user.vue?8724","webpack:///./src/views/main/system/user/user.vue?fbdf","webpack:///./src/hooks/usePageSearch.ts","webpack:///./node_modules/core-js/modules/es.array.map.js","webpack:///./src/hooks/usePageModal.ts"],"names":["_arrayWithHoles","arr","Array","isArray","_iterableToArrayLimit","i","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","length","err","_nonIterableRest","TypeError","_slicedToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","class","dialogVisible","title","modalConfig","width","center","destroy-on-close","footer","type","handleConfirmClick","formData","props","Object","required","defaultInfo","default","otherInfo","pageName","String","components","LxForm","setup","newValue","formItems","item","field","store","keys","dispatch","editData","id","newData","render","searchFormConfig","handleResetClick","handleSearchClick","contentTableConfig","ref","handleNewData","handleEditData","status","size","scope","row","enable","plain","modalConfigRef","labelWidth","label","placeholder","options","otherOptions","startPlaceholder","endPlaceholder","propList","prop","minWidth","slotName","showIndexColumn","showSelectColum","isHidden","colLayout","span","itemStyle","name","PageSearch","PageContent","PageModal","usePageSearch","pageContentRef","newCallBack","passwordItem","find","editCallBack","roleItem","state","entireRole","map","departmentItem","entireDepartment","usePageModal","pageModalRef","getPageData","searchInfo","$","$map","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","target","proto","forced","callbackfn","this","arguments","undefined"],"mappings":"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","file":"js/chunk-75794cb1.3013b325.js","sourcesContent":["export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","<template>\n  <div class=\"page-modal\">\n    <el-dialog\n      v-model=\"dialogVisible\"\n      :title=\"modalConfig.title\"\n      width=\"30%\"\n      center\n      destroy-on-close\n    >\n      <lx-form v-bind=\"modalConfig\" v-model=\"formData\"></lx-form>\n      <slot></slot>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"dialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"handleConfirmClick\"\n            >确 定</el-button\n          >\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, watch } from 'vue'\nimport { useStore } from 'vuex'\n\nimport LxForm from '@/base-ui/form'\n\nexport default defineComponent({\n  props: {\n    modalConfig: {\n      type: Object,\n      required: true\n    },\n    defaultInfo: {\n      type: Object,\n      default: () => ({})\n    },\n    otherInfo: {\n      type: Object,\n      default: () => ({})\n    },\n    pageName: {\n      type: String,\n      required: true\n    }\n  },\n  components: {\n    LxForm\n  },\n  setup(props) {\n    const dialogVisible = ref(false)\n    const formData = ref<any>({})\n\n    watch(\n      () => props.defaultInfo,\n      (newValue) => {\n        for (const item of props.modalConfig.formItems) {\n          formData.value[`${item.field}`] = newValue[`${item.field}`]\n        }\n      }\n    )\n\n    // 点击确定按钮的逻辑\n    const store = useStore()\n    const handleConfirmClick = () => {\n      dialogVisible.value = false\n      // 区分是新建按钮还是编辑按钮\n      if (Object.keys(props.defaultInfo).length) {\n        // 编辑按钮\n        store.dispatch('systemModule/editPageDataAction', {\n          pageName: props.pageName,\n          editData: { ...formData.value, ...props.otherInfo },\n          id: props.defaultInfo.id\n        })\n      } else {\n        // 新建按钮\n        store.dispatch('systemModule/createPageDataAction', {\n          pageName: props.pageName,\n          newData: { ...formData.value, ...props.otherInfo }\n        })\n      }\n    }\n\n    return {\n      dialogVisible,\n      formData,\n      handleConfirmClick\n    }\n  }\n})\n</script>\n\n<style scoped></style>\n","\nimport { defineComponent, ref, watch } from 'vue'\nimport { useStore } from 'vuex'\n\nimport LxForm from '@/base-ui/form'\n\nexport default defineComponent({\n  props: {\n    modalConfig: {\n      type: Object,\n      required: true\n    },\n    defaultInfo: {\n      type: Object,\n      default: () => ({})\n    },\n    otherInfo: {\n      type: Object,\n      default: () => ({})\n    },\n    pageName: {\n      type: String,\n      required: true\n    }\n  },\n  components: {\n    LxForm\n  },\n  setup(props) {\n    const dialogVisible = ref(false)\n    const formData = ref<any>({})\n\n    watch(\n      () => props.defaultInfo,\n      (newValue) => {\n        for (const item of props.modalConfig.formItems) {\n          formData.value[`${item.field}`] = newValue[`${item.field}`]\n        }\n      }\n    )\n\n    // 点击确定按钮的逻辑\n    const store = useStore()\n    const handleConfirmClick = () => {\n      dialogVisible.value = false\n      // 区分是新建按钮还是编辑按钮\n      if (Object.keys(props.defaultInfo).length) {\n        // 编辑按钮\n        store.dispatch('systemModule/editPageDataAction', {\n          pageName: props.pageName,\n          editData: { ...formData.value, ...props.otherInfo },\n          id: props.defaultInfo.id\n        })\n      } else {\n        // 新建按钮\n        store.dispatch('systemModule/createPageDataAction', {\n          pageName: props.pageName,\n          newData: { ...formData.value, ...props.otherInfo }\n        })\n      }\n    }\n\n    return {\n      dialogVisible,\n      formData,\n      handleConfirmClick\n    }\n  }\n})\n","import { render } from \"./page-modal.vue?vue&type=template&id=a0ef8b3c\"\nimport script from \"./page-modal.vue?vue&type=script&lang=ts\"\nexport * from \"./page-modal.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import PageModal from './src/page-modal.vue'\n\nexport default PageModal\n","<template>\n  <div class=\"user\">\n    <page-search\n      :searchFormConfig=\"searchFormConfig\"\n      @resetBtnClick=\"handleResetClick\"\n      @searchBtnClick=\"handleSearchClick\"\n    />\n    <page-content\n      :contentTableConfig=\"contentTableConfig\"\n      pageName=\"users\"\n      ref=\"pageContentRef\"\n      @newBtnClick=\"handleNewData\"\n      @editBtnClick=\"handleEditData\"\n    >\n      <template #status=\"scope\">\n        <el-button\n          size=\"mini\"\n          :type=\"scope.row.enable ? 'success' : 'danger'\"\n          plain\n          >{{ scope.row.enable ? '启用' : '禁用' }}</el-button\n        >\n      </template>\n    </page-content>\n    <page-modal\n      :modalConfig=\"modalConfigRef\"\n      ref=\"pageModalRef\"\n      :defaultInfo=\"defaultInfo\"\n      pageName=\"users\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\nimport { useStore } from '@/store'\n\nimport PageSearch from '@/components/page-search'\nimport PageContent from '@/components/page-content'\nimport PageModal from '@/components/page-modal'\n\nimport { searchFormConfig } from './config/search.config'\nimport { contentTableConfig } from './config/content.config'\nimport { modalConfig } from './config/modal.config'\n\nimport { usePageSearch } from '@/hooks/usePageSearch'\nimport { usePageModal } from '@/hooks/usePageModal'\n\nexport default defineComponent({\n  name: 'users',\n  components: {\n    PageSearch,\n    PageContent,\n    PageModal\n  },\n  setup() {\n    // 重置、搜索的hooks\n    const [pageContentRef, handleResetClick, handleSearchClick] =\n      usePageSearch()\n\n    // 1.pageModal新建、编辑的hooks 处理密码的逻辑\n    const newCallBack = () => {\n      const passwordItem = modalConfig.formItems.find(\n        (item) => item.field === 'password'\n      )\n      // 确定有值 ! 不隐藏\n      passwordItem!.isHidden = false\n    }\n    const editCallBack = () => {\n      const passwordItem = modalConfig.formItems.find(\n        (item) => item.field === 'password'\n      )\n      passwordItem!.isHidden = true\n    }\n\n    // 2.动态添加角色和部门的逻辑\n    const store = useStore()\n    const modalConfigRef = computed(() => {\n      const roleItem = modalConfig.formItems.find(\n        (item) => item.field === 'roleId'\n      )\n      roleItem!.options = store.state.entireRole.map((item) => {\n        return { title: item.name, value: item.id }\n      })\n\n      const departmentItem = modalConfig.formItems.find(\n        (item) => item.field === 'departmentId'\n      )\n      departmentItem!.options = store.state.entireDepartment.map((item) => {\n        return { title: item.name, value: item.id }\n      })\n\n      return modalConfig\n    })\n\n    // 3.调用hook获取公共的变量和函数\n    const [pageModalRef, defaultInfo, handleNewData, handleEditData] =\n      usePageModal(newCallBack, editCallBack)\n\n    return {\n      searchFormConfig,\n      contentTableConfig,\n      pageContentRef,\n      handleResetClick,\n      handleSearchClick,\n      modalConfigRef,\n      handleNewData,\n      handleEditData,\n      pageModalRef,\n      defaultInfo\n    }\n  }\n})\n</script>\n\n<style scoped></style>\n","// 配置文件\nimport { IForm } from '@/base-ui/form'\n\nexport const searchFormConfig: IForm = {\n  labelWidth: '120px',\n  // itemStyle: {\n  //   padding: '10px 30px'\n  // },\n  // colLayout: {\n  //   // 有默认值\n  //   span: 8\n  // },\n  formItems: [\n    {\n      field: 'id',\n      type: 'input',\n      label: 'id',\n      placeholder: '请输入id'\n    },\n    {\n      field: 'name',\n      type: 'input',\n      label: '用户名',\n      placeholder: '请输入用户名'\n    },\n    {\n      field: 'realname',\n      type: 'input',\n      label: '真实姓名',\n      placeholder: '请输入真实姓名'\n    },\n    {\n      field: 'cellphone',\n      type: 'input',\n      label: '电话号码',\n      placeholder: '请输入电话号码'\n    },\n    {\n      field: 'enable',\n      type: 'select',\n      label: '用户状态',\n      placeholder: '请选择用户状态',\n      options: [\n        { title: '启用', value: 1 },\n        { title: '禁用', value: 0 }\n      ]\n    },\n    {\n      field: 'createAt',\n      type: 'datepicker',\n      label: '创建时间',\n      otherOptions: {\n        startPlaceholder: '开始时间',\n        endPlaceholder: '结束时间',\n        // 时间选择范围\n        type: 'daterange'\n      }\n    }\n  ]\n}\n","export const contentTableConfig = {\n  title: '用户列表',\n  propList: [\n    { prop: 'name', label: '用户名', minWidth: '100' },\n    { prop: 'realname', label: '真实姓名', minWidth: '100' },\n    { prop: 'cellphone', label: '手机号码', minWidth: '100' },\n    { prop: 'enable', label: '状态', minWidth: '100', slotName: 'status' },\n    {\n      prop: 'createAt',\n      label: '创建时间',\n      minWidth: '250',\n      slotName: 'createAt'\n    },\n    {\n      prop: 'updateAt',\n      label: '更新时间',\n      minWidth: '250',\n      slotName: 'updateAt'\n    },\n    { label: '操作', minWidth: '120', slotName: 'handler' }\n  ],\n\n  // 是否显示序号\n  showIndexColumn: true,\n  // 是否显示选中框\n  showSelectColum: true\n}\n","// 配置文件\nimport { IForm } from '@/base-ui/form'\n\nexport const modalConfig: IForm = {\n  title: '新建用户',\n  formItems: [\n    {\n      field: 'name',\n      type: 'input',\n      label: '用户名',\n      placeholder: '请输入用户名'\n    },\n    {\n      field: 'realname',\n      type: 'input',\n      label: '真实姓名',\n      placeholder: '请输入真实姓名'\n    },\n    {\n      field: 'password',\n      type: 'password',\n      label: '用户密码',\n      placeholder: '请输入密码',\n      isHidden: false //默认不隐藏密码\n    },\n    {\n      field: 'cellphone',\n      type: 'input',\n      label: '电话号码',\n      placeholder: '请输入电话号码'\n    },\n    {\n      field: 'roleId',\n      type: 'select',\n      label: '选择角色',\n      placeholder: '请选择用户角色',\n      options: []\n    },\n    {\n      field: 'departmentId',\n      type: 'select',\n      label: '选择部门',\n      placeholder: '请选择用户部门',\n      options: []\n    }\n  ],\n  colLayout: { span: 24 },\n  itemStyle: {}\n}\n","\nimport { defineComponent, computed } from 'vue'\nimport { useStore } from '@/store'\n\nimport PageSearch from '@/components/page-search'\nimport PageContent from '@/components/page-content'\nimport PageModal from '@/components/page-modal'\n\nimport { searchFormConfig } from './config/search.config'\nimport { contentTableConfig } from './config/content.config'\nimport { modalConfig } from './config/modal.config'\n\nimport { usePageSearch } from '@/hooks/usePageSearch'\nimport { usePageModal } from '@/hooks/usePageModal'\n\nexport default defineComponent({\n  name: 'users',\n  components: {\n    PageSearch,\n    PageContent,\n    PageModal\n  },\n  setup() {\n    // 重置、搜索的hooks\n    const [pageContentRef, handleResetClick, handleSearchClick] =\n      usePageSearch()\n\n    // 1.pageModal新建、编辑的hooks 处理密码的逻辑\n    const newCallBack = () => {\n      const passwordItem = modalConfig.formItems.find(\n        (item) => item.field === 'password'\n      )\n      // 确定有值 ! 不隐藏\n      passwordItem!.isHidden = false\n    }\n    const editCallBack = () => {\n      const passwordItem = modalConfig.formItems.find(\n        (item) => item.field === 'password'\n      )\n      passwordItem!.isHidden = true\n    }\n\n    // 2.动态添加角色和部门的逻辑\n    const store = useStore()\n    const modalConfigRef = computed(() => {\n      const roleItem = modalConfig.formItems.find(\n        (item) => item.field === 'roleId'\n      )\n      roleItem!.options = store.state.entireRole.map((item) => {\n        return { title: item.name, value: item.id }\n      })\n\n      const departmentItem = modalConfig.formItems.find(\n        (item) => item.field === 'departmentId'\n      )\n      departmentItem!.options = store.state.entireDepartment.map((item) => {\n        return { title: item.name, value: item.id }\n      })\n\n      return modalConfig\n    })\n\n    // 3.调用hook获取公共的变量和函数\n    const [pageModalRef, defaultInfo, handleNewData, handleEditData] =\n      usePageModal(newCallBack, editCallBack)\n\n    return {\n      searchFormConfig,\n      contentTableConfig,\n      pageContentRef,\n      handleResetClick,\n      handleSearchClick,\n      modalConfigRef,\n      handleNewData,\n      handleEditData,\n      pageModalRef,\n      defaultInfo\n    }\n  }\n})\n","import { render } from \"./user.vue?vue&type=template&id=4d82d761\"\nimport script from \"./user.vue?vue&type=script&lang=ts\"\nexport * from \"./user.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","// 重置、搜索的hooks\nimport { ref } from 'vue'\nimport PageContent from '@/components/page-content'\n\nexport function usePageSearch() {\n  const pageContentRef = ref<InstanceType<typeof PageContent>>()\n\n  const handleResetClick = () => {\n    pageContentRef.value?.getPageData()\n  }\n\n  const handleSearchClick = (searchInfo: any) => {\n    pageContentRef.value?.getPageData(searchInfo)\n  }\n\n  return [pageContentRef, handleResetClick, handleSearchClick]\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","import { ref } from 'vue'\nimport PageModal from '@/components/page-modal'\n\ntype CallbackFn = (item?: any) => void\n\nexport function usePageModal(\n  newCallBack?: CallbackFn,\n  editCallBack?: CallbackFn\n) {\n  const pageModalRef = ref<InstanceType<typeof PageModal>>()\n  const defaultInfo = ref({})\n  const handleNewData = () => {\n    // 新建情况下为空对象\n    defaultInfo.value = {}\n    if (pageModalRef.value) {\n      pageModalRef.value.dialogVisible = true\n    }\n    // 当前面的有值时，才会调用后面的\n    newCallBack && newCallBack()\n  }\n  const handleEditData = (item: any) => {\n    // 编辑时，赋值回显\n    defaultInfo.value = { ...item }\n    if (pageModalRef.value) {\n      pageModalRef.value.dialogVisible = true\n    }\n    editCallBack && editCallBack(item)\n  }\n\n  return [pageModalRef, defaultInfo, handleNewData, handleEditData]\n}\n"],"sourceRoot":""}